{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","_useState","useState","_useState2","Object","slicedToArray","selectedOptions","setSelectedOptions","_useState3","_useState4","selectedOptions1","setSelectedOptions1","_useState5","_useState6","selectedOptions2","setSelectedOptions2","_useState7","_useState8","selectedOptions3","setSelectedOptions3","_useState9","_useState10","resultatValue","setresultatValue","_useState11","_useState12","firstSelectValue","setFirstSelectValue","_useState13","_useState14","codeFrom","setcodeFrom","_useState15","_useState16","codeTo","setcodeTo","_useState17","_useState18","codeTyp","setcodeTyp","_useState19","_useState20","codeweight","setcodeWei","_useState21","_useState22","secondSelectValue","setSecondSelectValue","_useState23","_useState24","thirdSelectValue","setThirdSelectValue","_useState25","_useState26","fourthSelectValue","setFourthSelectValue","_React$useState","React","_React$useState2","data","setData","elem1","elem2","elem3","elem4","elem5","From","To","Typ","Weight","Fragment","class","for","onChange","e","value","target","option","cities","find","o","filter","concat","toConsumableArray","label","objectSpread","disabled","map","i","key","text","value2","option2","typlist","value1","option1","cities1","value3","option3","vikt","type","name","result","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2b4aad4e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './bootstrap.min.css';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from \"react\";\nimport './App.css';\nimport cities from './cities.json';\nimport cities1 from './cities1.json';\n\nimport vikt  from \"./vikt.json\";\nimport typlist from \"./typlist.json\";\n\r\n\n\n\n \n \n\nexport default function App() {\n\n\n   \n\n \n\n\n\n\n \n\n    var [selectedOptions, setSelectedOptions] = useState([]);\n    var [selectedOptions1, setSelectedOptions1] = useState([]);\n    var [selectedOptions2, setSelectedOptions2] = useState([]);\n    var [selectedOptions3, setSelectedOptions3] = useState([]);\n\n     const [resultatValue, setresultatValue] = useState(\"\");\n\n   \n\n    const [firstSelectValue, setFirstSelectValue] = useState(\"\");\n    const [codeFrom, setcodeFrom] = useState(\"\");\n    const [codeTo, setcodeTo] = useState(\"\");\n    const [codeTyp, setcodeTyp] = useState(\"\");\n    const [codeweight, setcodeWei] = useState(\"\");\n \n    const [secondSelectValue, setSecondSelectValue] = useState(\"\");\n    const [thirdSelectValue, setThirdSelectValue] = useState(\"\");\n    const [fourthSelectValue, setFourthSelectValue] = useState(\"\");\n     \n\n    var [data, setData] = React.useState({\r\n\r\n    });\n   \n    const handleInputChange = e => {\r\n        const elem1 = e.target.value;\r\n        setData({ ...data, elem1 });\n\r\n    };\n\n    const { elem1, elem2, elem3, elem4, elem5} = data;\r\n\n\n    var [From] = [codeFrom];\n    var [To] = [codeTo];\n    var [Typ] = [codeTyp];\n    var [Weight] = [codeweight];\n    \n    var result;\n     \n\n\n    const handleFirstSelectChange = (e) => {\n        const value = e.target.value;\n        const option = cities.find((o) => o.value === value);\n        selectedOptions = cities.filter(value => cities.value === value);\n        setSelectedOptions([...selectedOptions, option]);\n        setFirstSelectValue(option.label);\n        setcodeFrom(option.value);\n\n       \n     \n        setresultatValue(option.value);\n\n\n        const elem1 = e.target.value;\r\n        setData({ ...data, elem1 });\n        \n        e.target.value = firstSelectValue;\n         \n        \n\n             \n\n    };\n\n\n    const handleSecondSelectChange = (e) => {\n        const value1 = e.target.value;\n        const option1 = cities.find((o) => o.value === value1);\n        selectedOptions1 = cities.filter(value => cities.value === value1);\n        setSelectedOptions1([...selectedOptions1, option1]);\n        setSecondSelectValue(option1.label);\n        setcodeTo(option1.value);\n\n        const elem2 = e.target.value;\r\n        setData({ ...data, elem2 });\n        \n\n         \n    };\n\n    const handleThirdSelectChange = (e) => {\n        const value2 = e.target.value;\n        const option2 = typlist.find((o) => o.value === value2);\n        selectedOptions2 = typlist.filter(value => typlist.value === value2);\n        setSelectedOptions2([...selectedOptions2, option2]);\n        setThirdSelectValue(option2.label);\n        setcodeTyp(option2.value);\n\n\n        const elem3 = e.target.value;\r\n        setData({ ...data, elem3 });\n\n    };\n\n    const handleFourthSelectChange = (e) => {\n        const value3 = e.target.value;\n        const option3 = vikt.find((o) => o.value === value3);\n        selectedOptions3 = vikt.filter(value => vikt.value === value3);\n        setSelectedOptions3([...selectedOptions3, option3]);\n        setFourthSelectValue(option3.label);\n        setcodeWei(option3.value);\n\n\n\n         \n        const elem4 = e.target.value;\r\n        setData({ ...data, elem4 });\n\n\n        if (elem1 === '1' && elem2 === '1' && elem3 === '2' && elem4 === '1') {\r\n            const elem5 = \"99\";\r\n            setData({ ...data, elem5 });\r\n        }\n\n        if (elem1 === '1' && elem2 === '2' && elem3 === '2' && elem4 === '1') {\r\n            const elem5 = \"199\";\r\n            setData({ ...data, elem5 });\r\n        }\n    };\n\n\n   \n\n\n\n   \n\n \n    return (\n\n      \n         \n        \n       \n\n            <React.Fragment>\n                <body class=\"bg-light\">\n\n\n               \n\n                <div class=\"container\">\n                    <div class=\"rowg\">\n                    <div class=\"rowh text-center\">\n                            <small class=\"text-muted\"><h2>R&auml;kna ut fraktkostnad Expressbud</h2>\n                            </small>\n\n                            \n                            <small class=\"text-muted\">Fyll i information om din s&auml;ndning inklusive destination, ursprung, s&auml;ndningsdatum och vikt.\n</small>\n\n \n                        \n                        </div>\n                    </div>\n\n                    <div class=\"rowx\">\n                       \n                        \n\n                        <div class=\"col-md-3 mb-3\">\n                            <label for=\"country\">Upph&auml;mtningsadress</label>\n\n                            <select class=\"custom-select d-block w-100\" onChange={handleFirstSelectChange} value={From} >\n                                <option disabled value=\"\">\n                                    select an option\n                                </option>\n                                {cities.map((option, i) => (\n                                    <option\n                                        key={option.value}\n                                        value={option.value}\n                                        label={option.label}\n                                        text={option.label}\n                                    >\n                                         \n                                    </option>\n                                ))}\n                            </select>\n\n\n                           \n                            \n\n                             \n                            <hr />\n                            <label for=\"state\">Leverans typ</label>\n\n                            <select class=\"custom-select d-block w-100\" onChange={handleThirdSelectChange} value={Typ} >\n                                <option disabled value=\"\">\n                                    select an option\n                                </option>\n                                {typlist.map((option, i) => (\n                                    <option\n                                        key={option.value}\n                                        value={option.value}\n                                        label={option.label}\n                                        text={option.label}\n                                    >\n\n                                    </option>\n                                ))}\n                            </select>\n                            <hr />\n                        </div>\n                        <div class=\"col-md-3 mb-3\">\n                            <label for=\"state\">Mottagare</label>\n                            <select class=\"custom-select d-block w-100\" onChange={handleSecondSelectChange} value={To} >\n                                <option disabled value=\"\">\n                                    select an option\n                                </option>\n                                {cities1.map((option, i) => (\n                                    <option\n                                        key={option.value}\n                                        value={option.value}\n                                        label={option.label}\n                                        text={option.label}\n                                    >\n\n                                    </option>\n                                ))}\n                            </select>\n                            <hr />\n                            <label for=\"state\">Vikt</label>\n                          \n                            <select class=\"custom-select d-block w-100\" onChange={handleFourthSelectChange} value={Weight} >\n                                <option disabled value=\"\">\n                                    select an option\n                                </option>\n                                {vikt.map((option, i) => (\n                                    <option\n                                        key={option.value}\n                                        value={option.value}\n                                        label={option.label}\n                                        text={option.label}\n                                    >\n\n                                    </option>\n                                ))}\n                            </select>\n                                \n                          \n                           \n                            <hr />\n                        </div>\n\n                       \n                            \n                                    \n          \n\n                      \n\n                     \n\n                       \n\n                        \n                        <div class=\"col-md-6 mb-3\">\n                            <h4 class=\"d-flex justify-content-between align-items-center mb-3\">\n                                <span class=\"text-muted\">Resultat:</span>\n                                <span class=\"badge badge-secondary badge-pill\">{elem4}</span>\n                            </h4>\n                            <ul class=\"list-group mb-3\">\n                                <li class=\"list-group-item d-flex justify-content-between lh-condensed\">\n                                    <div>\n                                        <small class=\"text-muted\">Upph&auml;mtningsadress</small>\n                                    </div>\n                                    <small class=\"text-muted\">{firstSelectValue}</small>\n                                    <input type=\"hidden\" name=\"from\" value={resultatValue} onChange={handleInputChange} /> \n\n                                </li>\n                                <li class=\"list-group-item d-flex justify-content-between lh-condensed\">\n                                    <div>\n                                        <small class=\"text-muted\">Mottagare</small>\n                                    </div>\n                                    <small class=\"text-muted\">{secondSelectValue}</small>\n                                </li>\n                                <li class=\"list-group-item d-flex justify-content-between lh-condensed\">\n                                    <div>\n                                        <small class=\"text-muted\">Leverans typ</small>\n                                    </div>\n                                    <small class=\"text-muted\">{thirdSelectValue}</small>\n                                </li>\n                                <li class=\"list-group-item d-flex justify-content-between lh-condensed\">\n                                    <div>\n                                        <small class=\"text-muted\">Vikt</small>\n                                    </div>\n                                    <small class=\"text-muted\" >{fourthSelectValue}</small>\n                                </li>\n                                <li class=\"list-group-item d-flex justify-content-between bg-light\">\n                                    <div class=\"text-success\">\n                                        <small>EXAMPLECODE</small>\n                                    </div>\n                                    <span class=\"text-success\">{elem5} Kr</span>\n                                </li>\n                                <li class=\"list-group-item d-flex justify-content-between\">\n                                    <span>Total (SEK)</span>\n                                    <strong>{result}</strong>\n                                </li>\n                            </ul>\n\n                        </div>\n                    </div>\n\n\n\n\n\n\n\n                    \n                     </div>\n                 </body>\n\n\n\n           </React.Fragment>\n\n\n\n\n                \n    );\n}"],"sourceRoot":""}