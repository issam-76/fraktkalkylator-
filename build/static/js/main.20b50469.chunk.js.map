{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["require","Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","selectedOptions","setSelectedOptions","_useState5","_useState6","selectedOptions1","setSelectedOptions1","_useState7","_useState8","selectedOptions2","setSelectedOptions2","_useState9","_useState10","selectedOptions3","setSelectedOptions3","_useState11","_useState12","resultatValue","setresultatValue","_useState13","_useState14","_useState15","_useState16","firstSelectValue","setFirstSelectValue","_useState17","_useState18","codeFrom","setcodeFrom","_useState19","_useState20","codeTo","setcodeTo","_useState21","_useState22","codeTyp","setcodeTyp","_useState23","_useState24","codeweight","setcodeWei","_useState25","_useState26","secondSelectValue","setSecondSelectValue","_useState27","_useState28","thirdSelectValue","setThirdSelectValue","_useState29","_useState30","fourthSelectValue","setFourthSelectValue","_React$useState","React","_React$useState2","data","setData","elem1","elem2","elem3","elem5","elem4","From","To","Typ","Weight","Fragment","class","for","onChange","e","value","target","option","cities","find","o","filter","concat","toConsumableArray","label","objectSpread","disabled","map","i","key","text","value2","option2","typlist","value1","option1","cities1","value3","option3","vikt","type","name","result","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.20b50469.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\nimport cities from './cities.json';\nimport cities1 from './cities1.json';\n\nimport vikt  from \"./vikt.json\";\nimport typlist from \"./typlist.json\";\n\r\n\n\n\nconst utf8 = require('utf8');\n \n\nexport default function App() {\n\n\n    const Select = ({ options, onChange, value }) => (\n\n    \n    <select class=\"custom-select d-block w-100\" onChange={onChange} value={value}>\n        <option   value=\"\">\n            select an option\n        </option>\n        {options.map((option, i) => (\n            <option\n                key={option.value}\n                value={option.value}\n               \n            >\n                {option.label}\n            </option>\n        ))}\n    </select>\n);\n\n \n\n\n\n\n    const [total, setTotal] = useState(0);\n\n    var [selectedOptions, setSelectedOptions] = useState([]);\n    var [selectedOptions1, setSelectedOptions1] = useState([]);\n    var [selectedOptions2, setSelectedOptions2] = useState([]);\n    var [selectedOptions3, setSelectedOptions3] = useState([]);\n\n     const [resultatValue, setresultatValue] = useState(\"\");\n\n    var [badge, Setbadge] = useState(\"\");\n\n    const [firstSelectValue, setFirstSelectValue] = useState(\"\");\n    const [codeFrom, setcodeFrom] = useState(\"\");\n    const [codeTo, setcodeTo] = useState(\"\");\n    const [codeTyp, setcodeTyp] = useState(\"\");\n    const [codeweight, setcodeWei] = useState(\"\");\n \n    const [secondSelectValue, setSecondSelectValue] = useState(\"\");\n    const [thirdSelectValue, setThirdSelectValue] = useState(\"\");\n    const [fourthSelectValue, setFourthSelectValue] = useState(\"\");\n     \n\n    var [data, setData] = React.useState({\r\n\r\n    });\n   \n    const handleInputChange = e => {\r\n        const elem1 = e.target.value;\r\n        setData({ ...data, elem1 });\n\r\n    };\n\n    const { elem1, elem2, elem3, elem4, elem5} = data;\r\n\n\n    var [From] = [codeFrom];\n    var [To] = [codeTo];\n    var [Typ] = [codeTyp];\n    var [Weight] = [codeweight];\n    \n    var result;\n     \n\n\n    const handleFirstSelectChange = (e) => {\n        const value = e.target.value;\n        const option = cities.find((o) => o.value === value);\n        selectedOptions = cities.filter(value => cities.value === value);\n        setSelectedOptions([...selectedOptions, option]);\n        setFirstSelectValue(option.label);\n        setcodeFrom(option.value);\n\n       \n     \n        setresultatValue(option.value);\n\n\n        const elem1 = e.target.value;\r\n        setData({ ...data, elem1 });\n        \n        e.target.value = firstSelectValue;\n         \n        \n\n             \n\n    };\n\n\n    const handleSecondSelectChange = (e) => {\n        const value1 = e.target.value;\n        const option1 = cities.find((o) => o.value === value1);\n        selectedOptions1 = cities.filter(value => cities.value === value1);\n        setSelectedOptions1([...selectedOptions1, option1]);\n        setSecondSelectValue(option1.label);\n        setcodeTo(option1.value);\n\n        const elem2 = e.target.value;\r\n        setData({ ...data, elem2 });\n        \n\n         \n    };\n\n    const handleThirdSelectChange = (e) => {\n        const value2 = e.target.value;\n        const option2 = typlist.find((o) => o.value === value2);\n        selectedOptions2 = typlist.filter(value => typlist.value === value2);\n        setSelectedOptions2([...selectedOptions2, option2]);\n        setThirdSelectValue(option2.label);\n        setcodeTyp(option2.value);\n\n\n        const elem3 = e.target.value;\r\n        setData({ ...data, elem3 });\n\n    };\n\n    const handleFourthSelectChange = (e) => {\n        const value3 = e.target.value;\n        const option3 = vikt.find((o) => o.value === value3);\n        selectedOptions3 = vikt.filter(value => vikt.value === value3);\n        setSelectedOptions3([...selectedOptions3, option3]);\n        setFourthSelectValue(option3.label);\n        setcodeWei(option3.value);\n\n\n\n         \n        const elem4 = e.target.value;\r\n        setData({ ...data, elem4 });\n\n\n        if (elem1 === '1' && elem2 === '1' && elem3 === '2' && elem4 === '1') {\r\n            const elem5 = \"99\";\r\n            setData({ ...data, elem5 });\r\n        }\n\n        if (elem1 === '1' && elem2 === '2' && elem3 === '2' && elem4 === '1') {\r\n            const elem5 = \"199\";\r\n            setData({ ...data, elem5 });\r\n        }\n    };\n\n\n   \n\n\n\n    const handleChange = (e) => {\r\n\r\n\r\n        const val = e.target.value;\r\n\r\n       \r\n        Setbadge(val);\r\n\r\n\r\n        if (badge === \"2\") {\n            Setbadge(\"Ggg\");\n        }\n\n    };\n\n    return (\n\n      \n         \n        \n       \n\n            <React.Fragment>\n                <body class=\"bg-light\">\n\n\n               \n\n                <div class=\"container\">\n                    <div class=\"rowg\">\n                    <div class=\"rowh text-center\">\n                            <small class=\"text-muted\"><h2>R&auml;kna ut fraktkostnad Expressbud</h2>\n                            </small>\n\n                            \n                            <small class=\"text-muted\">Fyll i information om din s&auml;ndning inklusive destination, ursprung, s&auml;ndningsdatum och vikt.\n</small>\n\n \n                        \n                        </div>\n                    </div>\n\n                    <div class=\"rowx\">\n                       \n                        \n\n                        <div class=\"col-md-3 mb-3\">\n                            <label for=\"country\">Upph&auml;mtningsadress</label>\n\n                            <select class=\"custom-select d-block w-100\" onChange={handleFirstSelectChange} value={From} >\n                                <option disabled value=\"\">\n                                    select an option\n                                </option>\n                                {cities.map((option, i) => (\n                                    <option\n                                        key={option.value}\n                                        value={option.value}\n                                        label={option.label}\n                                        text={option.label}\n                                    >\n                                         \n                                    </option>\n                                ))}\n                            </select>\n\n\n                           \n                            \n\n                             \n                            <hr />\n                            <label for=\"state\">Leverans typ</label>\n\n                            <select class=\"custom-select d-block w-100\" onChange={handleThirdSelectChange} value={Typ} >\n                                <option disabled value=\"\">\n                                    select an option\n                                </option>\n                                {typlist.map((option, i) => (\n                                    <option\n                                        key={option.value}\n                                        value={option.value}\n                                        label={option.label}\n                                        text={option.label}\n                                    >\n\n                                    </option>\n                                ))}\n                            </select>\n                            <hr />\n                        </div>\n                        <div class=\"col-md-3 mb-3\">\n                            <label for=\"state\">Mottagare</label>\n                            <select class=\"custom-select d-block w-100\" onChange={handleSecondSelectChange} value={To} >\n                                <option disabled value=\"\">\n                                    select an option\n                                </option>\n                                {cities1.map((option, i) => (\n                                    <option\n                                        key={option.value}\n                                        value={option.value}\n                                        label={option.label}\n                                        text={option.label}\n                                    >\n\n                                    </option>\n                                ))}\n                            </select>\n                            <hr />\n                            <label for=\"state\">Vikt</label>\n                          \n                            <select class=\"custom-select d-block w-100\" onChange={handleFourthSelectChange} value={Weight} >\n                                <option disabled value=\"\">\n                                    select an option\n                                </option>\n                                {vikt.map((option, i) => (\n                                    <option\n                                        key={option.value}\n                                        value={option.value}\n                                        label={option.label}\n                                        text={option.label}\n                                    >\n\n                                    </option>\n                                ))}\n                            </select>\n                                \n                          \n                           \n                            <hr />\n                        </div>\n\n                       \n                            \n                                    \n          \n\n                      \n\n                     \n\n                       \n\n                        \n                        <div class=\"col-md-6 mb-3\">\n                            <h4 class=\"d-flex justify-content-between align-items-center mb-3\">\n                                <span class=\"text-muted\">Resultat:</span>\n                                <span class=\"badge badge-secondary badge-pill\">{elem5}</span>\n                            </h4>\n                            <ul class=\"list-group mb-3\">\n                                <li class=\"list-group-item d-flex justify-content-between lh-condensed\">\n                                    <div>\n                                        <small class=\"text-muted\">Upph&auml;mtningsadress</small>\n                                    </div>\n                                    <small class=\"text-muted\">{firstSelectValue}</small>\n                                    <input type=\"hidden\" name=\"from\" value={resultatValue} onChange={handleInputChange} /> \n\n                                </li>\n                                <li class=\"list-group-item d-flex justify-content-between lh-condensed\">\n                                    <div>\n                                        <small class=\"text-muted\">Mottagare</small>\n                                    </div>\n                                    <small class=\"text-muted\">{secondSelectValue}</small>\n                                </li>\n                                <li class=\"list-group-item d-flex justify-content-between lh-condensed\">\n                                    <div>\n                                        <small class=\"text-muted\">Leverans typ</small>\n                                    </div>\n                                    <small class=\"text-muted\">{thirdSelectValue}</small>\n                                </li>\n                                <li class=\"list-group-item d-flex justify-content-between lh-condensed\">\n                                    <div>\n                                        <small class=\"text-muted\">Vikt</small>\n                                    </div>\n                                    <small class=\"text-muted\" >{fourthSelectValue}</small>\n                                </li>\n                                <li class=\"list-group-item d-flex justify-content-between bg-light\">\n                                    <div class=\"text-success\">\n                                        <small>EXAMPLECODE</small>\n                                    </div>\n                                    <span class=\"text-success\">{elem5} Kr</span>\n                                </li>\n                                <li class=\"list-group-item d-flex justify-content-between\">\n                                    <span>Total (SEK)</span>\n                                    <strong>{result}</strong>\n                                </li>\n                            </ul>\n\n                        </div>\n                    </div>\n\n\n\n\n\n\n\n                    \n                     </div>\n                 </body>\n\n\n\n           </React.Fragment>\n\n\n\n\n                \n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './bootstrap.min.css';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}